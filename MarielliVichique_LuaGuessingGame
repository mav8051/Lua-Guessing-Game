-- Marielli Vichique
-- Game generates a random number between 1 to 100
-- Player tries to guess the randomly generated number
-- Player is allowed a certain number of attempts (7)
-- If player guesses correctly, they win
-- If player does not guess correctly within the allowed number of attempts, they lose
-- Print a winning or losing message after each game. Include the random number
-- Allow player to replay as many times as they want



-- Guessing Game (Lua)

local function trim(s)                             -- helps player by removing excess white space from their answers, gives a bit of leniancy
  return (s:gsub("^%s+", ""):gsub("%s+$", ""))
end


local function normalizeYesNo(s)               -- make it so players have less trouble with typing yes or no in upper case or with spaces
  s = trim(s or "")
  s = s:lower()
  return s
end


math.randomseed(os.time())              -- seed random number using time

local maxAttempts = 7                 -- max attempts allowed to guess random number
local response = "yes"                 -- sets response to yes, used at the end for players to repeat game or end game

while response == "yes" do              -- starting new loop! set everything to false and attempts to 0, randomize a number!
  local player_won = false
  local attempts = 0
  local randomNumber = math.random(1, 100)

  print("Guess the number I am thinking of between 1 and 100. You get 7 attempts!")
  --[[print("Hacking Mode: Winning number is " ..randomNumber.. "!")]]--              -- remove notation if you wish to view the random number, cheater!!!

  while attempts < maxAttempts and player_won ==false do                  -- while loop, subtract attempts against max attempts and display to player, allow entry 
    print("You have " .. (maxAttempts - attempts) .. " attempts left.")
    io.write("Enter your number (1â€“100): ")
    local input = io.read("*l")
    local guess = tonumber(input)

    -- validate integer in range
    if type(guess) ~= "number" or guess < 1 or guess > 100 then         -- baby check, error handling! Make sure player is entering a number between 1 and 100, no symbols, letters, etc.
      print("Where did you learn to read?! Let's try that again.")
    else
      if guess ~= randomNumber then             -- player enters a number that does NOT match randomNumber, add an attempt and go to next loop
        print("OOF, wrong answer.")
        attempts = attempts + 1
      else
        player_won = true         -- player guessed answer right, set player won to true and end if loop and end while loop
      end
    end
  end


  if player_won == true then                                                                              -- player win set to true, display winning screen! 
    print("Congratulations, you're a psychic!... and you win.... I guess.")
  else                                                                                -- player did not win, display losing screen and display what the number was
    print("Dang! Better luck next time, chump. The number was " ..randomNumber..".")
  end

  repeat                                                                                 -- using a repeat function to check until response and loop if yes, 
    io.write("Do you want to play again? (yes/no): ") 
    response = normalizeYesNo(io.read("*l"))                -- normalizeYesNo used to give players more leniancy when answering *l for letters 
  until response == "yes" or response == "no"                 -- if player types no, this ends the while loop and ends the game. Display End 
end

print("Thanks for playing!")
